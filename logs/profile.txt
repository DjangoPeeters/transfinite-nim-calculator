Flat profile:

Each sample counts as 0.01 seconds.
  %   cumulative   self              self     total           
 time   seconds   seconds    calls   s/call   s/call  name    
 75.60    107.61   107.61 553042783     0.00     0.00  impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int)
 19.47    135.32    27.71 3975072480     0.00     0.00  impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int)
  2.92    139.48     4.16                             _init
  1.91    142.20     2.72     2198     0.00     0.06  impartial_term_algebra::multiply(term_array const&, term_array const&)
  0.06    142.28     0.08     5685     0.00     0.00  impartial_term_algebra::square(term_array const&)
  0.02    142.31     0.03   187894     0.00     0.00  impartial_term_algebra::term_times_term(unsigned int, unsigned int)
  0.01    142.33     0.02   199104     0.00     0.00  impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int)
  0.01    142.34     0.01       21     0.00     0.00  impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)
  0.00    142.34     0.00  1122608     0.00     0.00  void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00   840541     0.00     0.00  std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_unique_pos(unsigned int const&)
  0.00    142.34     0.00   652647     0.00     0.00  std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&)
  0.00    142.34     0.00   187962     0.00     0.00  std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&)
  0.00    142.34     0.00     1263     0.00     0.00  nt_funcs::is_3_pow(unsigned short)
  0.00    142.34     0.00      620     0.00     0.00  prime_generator::primes(unsigned short, unsigned short)
  0.00    142.34     0.00      599     0.00     0.00  nt_funcs::prime_pow(unsigned short)
  0.00    142.34     0.00      535     0.00     0.00  std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  0.00    142.34     0.00      324     0.00     0.00  frame_dummy
  0.00    142.34     0.00      241     0.00     0.00  int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int)
  0.00    142.34     0.00      207     0.00     0.00  important_funcs::q_set(unsigned short)
  0.00    142.34     0.00      134     0.00     0.00  std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_unique_pos(unsigned short const&)
  0.00    142.34     0.00      125     0.00     0.00  std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&)
  0.00    142.34     0.00      125     0.00     0.00  std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&)
  0.00    142.34     0.00      116     0.00     1.19  important_funcs::excess(unsigned short)
  0.00    142.34     0.00      112     0.00     0.00  ww::ww(unsigned short)
  0.00    142.34     0.00       94     0.00     0.00  operator==(ww const&, ww const&)
  0.00    142.34     0.00       77     0.00     0.00  important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short)
  0.00    142.34     0.00       68     0.00     0.00  void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&)
  0.00    142.34     0.00       68     0.00     0.00  std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_const_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >)
  0.00    142.34     0.00       63     0.00     0.00  important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short)
  0.00    142.34     0.00       57     0.00     0.00  std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base()
  0.00    142.34     0.00       56     0.00     0.00  www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&)
  0.00    142.34     0.00       56     0.00     0.00  std::vector<unsigned short, std::allocator<unsigned short> >::vector(std::vector<unsigned short, std::allocator<unsigned short> > const&)
  0.00    142.34     0.00       54     0.00     0.00  impartial_term_algebra::get_q_components() const
  0.00    142.34     0.00       50     0.00     0.00  www::string_of_term[abi:cxx11](ww, unsigned long)
  0.00    142.34     0.00       49     0.00     0.00  impartial_term_algebra::get_term_count() const
  0.00    142.34     0.00       40     0.00     0.00  www::www(unsigned long)
  0.00    142.34     0.00       39     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00       34     0.00     0.00  www::operator=(www const&)
  0.00    142.34     0.00       34     0.00     0.00  www_nim::kappa(unsigned short)
  0.00    142.34     0.00       34     0.00     0.00  www::operator+(www const&) const
  0.00    142.34     0.00       28     0.00     3.29  www_nim::alpha(unsigned short)
  0.00    142.34     0.00       28     0.00     0.00  nt_funcs::f(unsigned short)
  0.00    142.34     0.00       28     0.00     0.00  www::to_string[abi:cxx11]() const
  0.00    142.34     0.00       26     0.00     0.00  std::_List_iterator<std::pair<unsigned short, unsigned short> > std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > >::insert<std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, void>(std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >)
  0.00    142.34     0.00       25     0.00     0.00  std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned short>, unsigned short const&)
  0.00    142.34     0.00       24     0.00     0.00  important_funcs::(anonymous namespace)::primitive_components(unsigned short)
  0.00    142.34     0.00       22     0.00     0.00  prime_generator::prime_pi(unsigned short)
  0.00    142.34     0.00       22     0.00     0.00  ww::simp_terms(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&)
  0.00    142.34     0.00       22     0.00     0.00  ww::ww(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&)
  0.00    142.34     0.00       22     0.00     0.00  ww::operator=(ww const&)
  0.00    142.34     0.00       22     0.00     0.00  www::www(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&)
  0.00    142.34     0.00       22     0.00     0.00  std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >)
  0.00    142.34     0.00       22     0.00     0.00  operator<(ww const&, ww const&)
  0.00    142.34     0.00       21     0.00     0.00  impartial_term_algebra::~impartial_term_algebra()
  0.00    142.34     0.00       21     0.00     0.00  nt_funcs::max_pow_min_prime_div(unsigned short)
  0.00    142.34     0.00       21     0.00     0.00  void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&)
  0.00    142.34     0.00       21     0.00     0.00  std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >)
  0.00    142.34     0.00       21     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00       21     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00       18     0.00     0.00  ww::string_of_term[abi:cxx11](unsigned short, unsigned short)
  0.00    142.34     0.00       18     0.00     0.00  impartial_term_algebra::get_basis() const
  0.00    142.34     0.00       18     0.00     0.00  ww::to_string[abi:cxx11]() const
  0.00    142.34     0.00       14     0.00     0.00  cache_q_set(unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >)
  0.00    142.34     0.00       14     0.00     0.00  write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long)
  0.00    142.34     0.00       14     0.00     0.00  cache_excess(unsigned short, unsigned char)
  0.00    142.34     0.00       14     0.00     0.00  important_funcs::(anonymous namespace)::kappa_set(unsigned short)
  0.00    142.34     0.00       14     0.00     0.00  important_funcs::get_excess_cache()
  0.00    142.34     0.00       14     0.00     0.00  prime_generator::nth_prime(unsigned long)
  0.00    142.34     0.00       14     0.00     9.87  impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&)
  0.00    142.34     0.00       14     0.00     0.00  void boost::multiprecision::backends::subtract_unsigned<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long const&)
  0.00    142.34     0.00       14     0.00     0.00  void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&)
  0.00    142.34     0.00       14     0.00     0.00  void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&)
  0.00    142.34     0.00       14     0.00     0.00  nt_funcs::div_2_pow_min_1(unsigned short, unsigned int)
  0.00    142.34     0.00       14     0.00     0.00  boost::wrapexcept<std::range_error>::clone() const
  0.00    142.34     0.00       14     0.00     0.00  void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00       14     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00       14     0.00     0.00  operator<<(std::ostream&, www const&)
  0.00    142.34     0.00       13     0.00     0.00  void boost::multiprecision::backends::left_shift_generic<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, unsigned __int128)
  0.00    142.34     0.00        7     0.00     0.00  void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
  0.00    142.34     0.00        6     0.00     0.00  std::vector<unsigned short, std::allocator<unsigned short> >::~vector()
  0.00    142.34     0.00        3     0.00     0.00  std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_unique_pos(unsigned short const&)
  0.00    142.34     0.00        3     0.00     0.00  std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_unique_pos(unsigned short const&)
  0.00    142.34     0.00        2     0.00     0.00  std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&)
  0.00    142.34     0.00        2     0.00     0.00  std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&)
  0.00    142.34     0.00        2     0.00     0.00  void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&&)
  0.00    142.34     0.00        1     0.00     0.00  q_set_records()
  0.00    142.34     0.00        1     0.00     0.00  excess_records()

 %         the percentage of the total running time of the
time       program used by this function.

cumulative a running sum of the number of seconds accounted
 seconds   for by this function and those listed above it.

 self      the number of seconds accounted for by this
seconds    function alone.  This is the major sort for this
           listing.

calls      the number of times this function was invoked, if
           this function is profiled, else blank.

 self      the average number of milliseconds spent in this
ms/call    function per call, if this function is profiled,
	   else blank.

 total     the average number of milliseconds spent in this
ms/call    function and its descendents per call, if this
	   function is profiled, else blank.

name       the name of the function.  This is the minor sort
           for this listing. The index shows the location of
	   the function in the gprof listing. If the index is
	   in parenthesis it shows where it would appear in
	   the gprof listing if it were to be printed.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

		     Call graph (explanation follows)


granularity: each sample hit covers 4 byte(s) for 0.01% of 142.34 seconds

index % time    self  children    called     name
[1]     97.1    0.01  138.17      84+438     <cycle 2 as a whole> [1]
                0.00  138.16     116             important_funcs::excess(unsigned short) <cycle 2> [3]
                0.01    0.00      21             impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                0.00    0.01      14+7           important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00     207             important_funcs::q_set(unsigned short) <cycle 2> [31]
                0.00    0.00      77             important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) <cycle 2> [37]
                0.00    0.00      63             important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) <cycle 2> [40]
                0.00    0.00      24+25          important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
-----------------------------------------------
                                                 <spontaneous>
[2]     97.1    0.00  138.18                 main [2]
                0.00   92.12      28/28          www_nim::alpha(unsigned short) [7]
                0.00   23.03      14/84          important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00   23.03      14/84          important_funcs::q_set(unsigned short) <cycle 2> [31]
                0.00    0.00      14/14          prime_generator::nth_prime(unsigned long) [77]
                0.00    0.00      14/14          operator<<(std::ostream&, www const&) [85]
                0.00    0.00      14/14          write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long) [74]
-----------------------------------------------
                                  25             impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                                  49             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                0.00   23.03      14/84          main [2]
                0.00   46.06      28/84          www_nim::alpha(unsigned short) [7]
[3]     97.1    0.00  138.16     116         important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00  138.16      14/14          impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&) [4]
                0.00    0.00      53/187962      std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&) [25]
                0.00    0.00      42/49          impartial_term_algebra::get_term_count() const [46]
                0.00    0.00      41/68          void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&) [38]
                0.00    0.00      33/54          impartial_term_algebra::get_q_components() const [44]
                0.00    0.00      17/39          void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [48]
                0.00    0.00      14/14          void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [84]
                0.00    0.00      14/14          void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [83]
                0.00    0.00      14/28          nt_funcs::f(unsigned short) [52]
                0.00    0.00      14/21          std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >) [67]
                0.00    0.00      14/14          nt_funcs::div_2_pow_min_1(unsigned short, unsigned int) [81]
                0.00    0.00      14/21          impartial_term_algebra::~impartial_term_algebra() [64]
                0.00    0.00      14/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&) [34]
                0.00    0.00      14/14          cache_excess(unsigned short, unsigned char) [75]
                0.00    0.00      14/21          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&) [66]
                0.00    0.00      14/14          void boost::multiprecision::backends::subtract_unsigned<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long const&) [78]
                0.00    0.00      14/14          void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [79]
                0.00    0.00      14/14          void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [80]
                0.00    0.00      13/13          void boost::multiprecision::backends::left_shift_generic<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, unsigned __int128) [86]
                0.00    0.00      11/18          impartial_term_algebra::get_basis() const [71]
                0.00    0.00       9/1263        nt_funcs::is_3_pow(unsigned short) [26]
                                  17             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                                  14             important_funcs::q_set(unsigned short) <cycle 2> [31]
                                  14             important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) <cycle 2> [37]
                                  14             important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) <cycle 2> [40]
                                  14             impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
-----------------------------------------------
                0.00  138.16      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[4]     97.1    0.00  138.16      14         impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&) [4]
                2.72  135.23    2198/2198        impartial_term_algebra::multiply(term_array const&, term_array const&) [5]
                0.08    0.13    5519/5685        impartial_term_algebra::square(term_array const&) [11]
-----------------------------------------------
                2.72  135.23    2198/2198        impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&) [4]
[5]     96.9    2.72  135.23    2198         impartial_term_algebra::multiply(term_array const&, term_array const&) [5]
              107.50   27.73 552481376/553042783     impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
-----------------------------------------------
                             1840850117             impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
                0.11    0.03  561407/553042783     impartial_term_algebra::square(term_array const&) [11]
              107.50   27.73 552481376/553042783     impartial_term_algebra::multiply(term_array const&, term_array const&) [5]
[6]     95.1  107.61   27.76 553042783+1840850117 impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
               27.76    0.00 3974447700/3974646804     impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
                             1840850117             impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
-----------------------------------------------
                0.00   92.12      28/28          main [2]
[7]     64.7    0.00   92.12      28         www_nim::alpha(unsigned short) [7]
                0.00   46.06      28/84          important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00   46.06      28/84          important_funcs::q_set(unsigned short) <cycle 2> [31]
                0.00    0.00      34/34          www_nim::kappa(unsigned short) [50]
                0.00    0.00      34/34          www::operator+(www const&) const [51]
                0.00    0.00      34/34          www::operator=(www const&) [49]
                0.00    0.00      28/40          www::www(unsigned long) [47]
-----------------------------------------------
[8]     19.5   27.76    0.00 3974646804+812674  <cycle 1 as a whole> [8]
               27.71    0.00 3975072480             impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
                0.03    0.00  187894             impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
                0.02    0.00  199104             impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
-----------------------------------------------
                              425676             impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
                0.00    0.00  199104/3974646804     impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
               27.76    0.00 3974447700/3974646804     impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
[9]     19.5   27.71    0.00 3975072480         impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
                              199104             impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
-----------------------------------------------
                                                 <spontaneous>
[10]     2.9    4.16    0.00                 _init [10]
-----------------------------------------------
                0.00    0.00     166/5685        important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.08    0.13    5519/5685        impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&) [4]
[11]     0.2    0.08    0.14    5685         impartial_term_algebra::square(term_array const&) [11]
                0.11    0.03  561407/553042783     impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [6]
-----------------------------------------------
                              187894             impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
[12]     0.0    0.03    0.00  187894         impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
                0.00    0.00 1023056/1122608     void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [22]
                0.00    0.00  445215/652647      std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&) [24]
                0.00    0.00  187894/840541      std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_unique_pos(unsigned int const&) [23]
                0.00    0.00  187894/187962      std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&) [25]
                              425676             impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
-----------------------------------------------
                              199104             impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
[13]     0.0    0.02    0.00  199104         impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
                0.00    0.00  207432/652647      std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&) [24]
                0.00    0.00   99552/1122608     void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [22]
                              187894             impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
-----------------------------------------------
                                   7             important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                                  14             important_funcs::excess(unsigned short) <cycle 2> [3]
[14]     0.0    0.01    0.00      21         impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                0.00    0.00  199104/3974646804     impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) <cycle 1> [9]
                0.00    0.00      64/599         nt_funcs::prime_pow(unsigned short) [28]
                0.00    0.00      21/21          void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [69]
                0.00    0.00      21/21          void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [68]
                0.00    0.00      14/14          boost::wrapexcept<std::range_error>::clone() const [82]
                0.00    0.00       7/21          void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&) [66]
                                  25             important_funcs::q_set(unsigned short) <cycle 2> [31]
                                  25             important_funcs::excess(unsigned short) <cycle 2> [3]
-----------------------------------------------
                                   7             important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                                  14             important_funcs::q_set(unsigned short) <cycle 2> [31]
[15]     0.0    0.00    0.01      14+7       important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00     166/5685        impartial_term_algebra::square(term_array const&) [11]
                0.00    0.00      23/68          void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&) [38]
                0.00    0.00      21/21          nt_funcs::max_pow_min_prime_div(unsigned short) [65]
                0.00    0.00      21/39          void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [48]
                0.00    0.00      21/54          impartial_term_algebra::get_q_components() const [44]
                0.00    0.00      14/187962      std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&) [25]
                0.00    0.00       7/7           void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [87]
                0.00    0.00       7/21          std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >) [67]
                0.00    0.00       7/49          impartial_term_algebra::get_term_count() const [46]
                0.00    0.00       7/18          impartial_term_algebra::get_basis() const [71]
                0.00    0.00       7/21          impartial_term_algebra::~impartial_term_algebra() [64]
                                   7             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                                   7             impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                                   7             important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
-----------------------------------------------
                0.00    0.00      14/324         std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::~map() [156]
                0.00    0.00      14/324         std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::~map() [155]
                0.00    0.00     110/324         excess_records() [95]
                0.00    0.00     186/324         q_set_records() [94]
[16]     0.0    0.00    0.00     324         frame_dummy [16]
-----------------------------------------------
                               27127             void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [22]
                0.00    0.00   99552/1122608     impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
                0.00    0.00 1023056/1122608     impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
[22]     0.0    0.00    0.00 1122608+27127   void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [22]
                               27127             void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [22]
-----------------------------------------------
                0.00    0.00  187894/840541      impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
                0.00    0.00  652647/840541      std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&) [24]
[23]     0.0    0.00    0.00  840541         std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_unique_pos(unsigned int const&) [23]
-----------------------------------------------
                0.00    0.00  207432/652647      impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) <cycle 1> [13]
                0.00    0.00  445215/652647      impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
[24]     0.0    0.00    0.00  652647         std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&) [24]
                0.00    0.00  652647/840541      std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_unique_pos(unsigned int const&) [23]
-----------------------------------------------
                0.00    0.00       1/187962      _GLOBAL__sub_I__ZN15important_funcs15get_q_set_cacheEv [98]
                0.00    0.00      14/187962      important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      53/187962      important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00    0.00  187894/187962      impartial_term_algebra::term_times_term(unsigned int, unsigned int) <cycle 1> [12]
[25]     0.0    0.00    0.00  187962         std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&) [25]
-----------------------------------------------
                0.00    0.00       9/1263        important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00    0.00      14/1263        prime_generator::nth_prime(unsigned long) [77]
                0.00    0.00    1240/1263        prime_generator::primes(unsigned short, unsigned short) [27]
[26]     0.0    0.00    0.00    1263         nt_funcs::is_3_pow(unsigned short) [26]
                0.00    0.00       4/68          void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&) [38]
-----------------------------------------------
                0.00    0.00      21/620         nt_funcs::max_pow_min_prime_div(unsigned short) [65]
                0.00    0.00     599/620         nt_funcs::prime_pow(unsigned short) [28]
[27]     0.0    0.00    0.00     620         prime_generator::primes(unsigned short, unsigned short) [27]
                0.00    0.00    1240/1263        nt_funcs::is_3_pow(unsigned short) [26]
-----------------------------------------------
                0.00    0.00      34/599         www_nim::kappa(unsigned short) [50]
                0.00    0.00      49/599         important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                0.00    0.00      52/599         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [48]
                0.00    0.00      64/599         impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                0.00    0.00     134/599         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [83]
                0.00    0.00     266/599         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [68]
[28]     0.0    0.00    0.00     599         nt_funcs::prime_pow(unsigned short) [28]
                0.00    0.00     599/620         prime_generator::primes(unsigned short, unsigned short) [27]
-----------------------------------------------
                0.00    0.00     535/535         write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long) [74]
[29]     0.0    0.00    0.00     535         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [29]
-----------------------------------------------
                0.00    0.00     110/241         excess_records() [95]
                0.00    0.00     131/241         q_set_records() [94]
[30]     0.0    0.00    0.00     241         int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [30]
-----------------------------------------------
                                  14             important_funcs::excess(unsigned short) <cycle 2> [3]
                                  25             impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                                  49             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                                  77             important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) <cycle 2> [37]
                0.00   23.03      14/84          main [2]
                0.00   46.06      28/84          www_nim::alpha(unsigned short) [7]
[31]     0.0    0.00    0.00     207         important_funcs::q_set(unsigned short) <cycle 2> [31]
                0.00    0.00      14/28          nt_funcs::f(unsigned short) [52]
                0.00    0.00      14/14          important_funcs::get_excess_cache() [76]
                0.00    0.00      14/14          cache_q_set(unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >) [73]
                                  14             important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
-----------------------------------------------
                0.00    0.00     134/134         important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
[32]     0.0    0.00    0.00     134         std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_unique_pos(unsigned short const&) [32]
-----------------------------------------------
                0.00    0.00      14/125         important_funcs::get_excess_cache() [76]
                0.00    0.00      55/125         q_set_records() [94]
                0.00    0.00      56/125         std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&) [91]
[33]     0.0    0.00    0.00     125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&) [33]
-----------------------------------------------
                0.00    0.00      14/125         important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00    0.00      55/125         excess_records() [95]
                0.00    0.00      56/125         std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&) [92]
[34]     0.0    0.00    0.00     125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&) [34]
-----------------------------------------------
                0.00    0.00      40/112         www::www(unsigned long) [47]
                0.00    0.00      72/112         www::string_of_term[abi:cxx11](ww, unsigned long) [45]
[35]     0.0    0.00    0.00     112         ww::ww(unsigned short) [35]
-----------------------------------------------
                0.00    0.00      22/94          www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
                0.00    0.00      72/94          www::string_of_term[abi:cxx11](ww, unsigned long) [45]
[36]     0.0    0.00    0.00      94         operator==(ww const&, ww const&) [36]
-----------------------------------------------
                                  14             important_funcs::excess(unsigned short) <cycle 2> [3]
                                  63             important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) <cycle 2> [40]
[37]     0.0    0.00    0.00      77         important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) <cycle 2> [37]
                                  77             important_funcs::q_set(unsigned short) <cycle 2> [31]
-----------------------------------------------
                0.00    0.00       4/68          nt_funcs::is_3_pow(unsigned short) [26]
                0.00    0.00      23/68          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      41/68          important_funcs::excess(unsigned short) <cycle 2> [3]
[38]     0.0    0.00    0.00      68         void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&) [38]
-----------------------------------------------
                0.00    0.00      34/68          www::operator=(www const&) [49]
                0.00    0.00      34/68          www::operator+(www const&) const [51]
[39]     0.0    0.00    0.00      68         std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_const_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >) [39]
-----------------------------------------------
                                  14             important_funcs::excess(unsigned short) <cycle 2> [3]
                                  49             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
[40]     0.0    0.00    0.00      63         important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) <cycle 2> [40]
                                  63             important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) <cycle 2> [37]
-----------------------------------------------
                0.00    0.00      57/57          boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[41]     0.0    0.00    0.00      57         std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base() [41]
-----------------------------------------------
                                  22             www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
                0.00    0.00      22/56          www::www(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [61]
                0.00    0.00      34/56          www::operator+(www const&) const [51]
[42]     0.0    0.00    0.00      56+22      www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
                0.00    0.00      22/22          operator<(ww const&, ww const&) [63]
                0.00    0.00      22/22          std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >) [62]
                0.00    0.00      22/94          operator==(ww const&, ww const&) [36]
                                  22             www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
-----------------------------------------------
                0.00    0.00      56/56          boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[43]     0.0    0.00    0.00      56         std::vector<unsigned short, std::allocator<unsigned short> >::vector(std::vector<unsigned short, std::allocator<unsigned short> > const&) [43]
-----------------------------------------------
                0.00    0.00      21/54          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      33/54          important_funcs::excess(unsigned short) <cycle 2> [3]
[44]     0.0    0.00    0.00      54         impartial_term_algebra::get_q_components() const [44]
-----------------------------------------------
                0.00    0.00      50/50          www::to_string[abi:cxx11]() const [53]
[45]     0.0    0.00    0.00      50         www::string_of_term[abi:cxx11](ww, unsigned long) [45]
                0.00    0.00      72/112         ww::ww(unsigned short) [35]
                0.00    0.00      72/94          operator==(ww const&, ww const&) [36]
                0.00    0.00      18/18          ww::to_string[abi:cxx11]() const [72]
                0.00    0.00       4/26          std::_List_iterator<std::pair<unsigned short, unsigned short> > std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > >::insert<std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, void>(std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >) [54]
-----------------------------------------------
                0.00    0.00       7/49          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      42/49          important_funcs::excess(unsigned short) <cycle 2> [3]
[46]     0.0    0.00    0.00      49         impartial_term_algebra::get_term_count() const [46]
-----------------------------------------------
                0.00    0.00      12/40          www_nim::kappa(unsigned short) [50]
                0.00    0.00      28/40          www_nim::alpha(unsigned short) [7]
[47]     0.0    0.00    0.00      40         www::www(unsigned long) [47]
                0.00    0.00      40/112         ww::ww(unsigned short) [35]
-----------------------------------------------
                0.00    0.00       1/39          _GLOBAL__sub_I__ZN15important_funcs15get_q_set_cacheEv [98]
                0.00    0.00      17/39          important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00    0.00      21/39          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
[48]     0.0    0.00    0.00      39         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [48]
                0.00    0.00      52/599         nt_funcs::prime_pow(unsigned short) [28]
-----------------------------------------------
                0.00    0.00      34/34          www_nim::alpha(unsigned short) [7]
[49]     0.0    0.00    0.00      34         www::operator=(www const&) [49]
                0.00    0.00      34/68          std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_const_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >) [39]
                0.00    0.00      22/22          ww::operator=(ww const&) [60]
-----------------------------------------------
                0.00    0.00      34/34          www_nim::alpha(unsigned short) [7]
[50]     0.0    0.00    0.00      34         www_nim::kappa(unsigned short) [50]
                0.00    0.00      34/599         nt_funcs::prime_pow(unsigned short) [28]
                0.00    0.00      22/22          prime_generator::prime_pi(unsigned short) [57]
                0.00    0.00      22/22          ww::ww(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [59]
                0.00    0.00      22/22          www::www(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [61]
                0.00    0.00      12/40          www::www(unsigned long) [47]
-----------------------------------------------
                0.00    0.00      34/34          www_nim::alpha(unsigned short) [7]
[51]     0.0    0.00    0.00      34         www::operator+(www const&) const [51]
                0.00    0.00      34/56          www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
                0.00    0.00      34/68          std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_const_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >) [39]
-----------------------------------------------
                0.00    0.00      14/28          important_funcs::excess(unsigned short) <cycle 2> [3]
                0.00    0.00      14/28          important_funcs::q_set(unsigned short) <cycle 2> [31]
[52]     0.0    0.00    0.00      28         nt_funcs::f(unsigned short) [52]
-----------------------------------------------
                0.00    0.00      14/28          write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long) [74]
                0.00    0.00      14/28          operator<<(std::ostream&, www const&) [85]
[53]     0.0    0.00    0.00      28         www::to_string[abi:cxx11]() const [53]
                0.00    0.00      50/50          www::string_of_term[abi:cxx11](ww, unsigned long) [45]
-----------------------------------------------
                0.00    0.00       4/26          www::string_of_term[abi:cxx11](ww, unsigned long) [45]
                0.00    0.00      22/26          ww::operator=(ww const&) [60]
[54]     0.0    0.00    0.00      26         std::_List_iterator<std::pair<unsigned short, unsigned short> > std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > >::insert<std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, void>(std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >) [54]
-----------------------------------------------
                0.00    0.00      25/25          important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
[55]     0.0    0.00    0.00      25         std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned short>, unsigned short const&) [55]
-----------------------------------------------
                                  25             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                                   7             important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                                  17             important_funcs::excess(unsigned short) <cycle 2> [3]
[56]     0.0    0.00    0.00      24+25      important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
                0.00    0.00     134/134         std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_unique_pos(unsigned short const&) [32]
                0.00    0.00      49/599         nt_funcs::prime_pow(unsigned short) [28]
                0.00    0.00      25/25          std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned short>, unsigned short const&) [55]
                                  49             important_funcs::q_set(unsigned short) <cycle 2> [31]
                                  49             important_funcs::excess(unsigned short) <cycle 2> [3]
                                  49             important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) <cycle 2> [40]
                                  25             important_funcs::(anonymous namespace)::primitive_components(unsigned short) <cycle 2> [56]
-----------------------------------------------
                0.00    0.00      22/22          www_nim::kappa(unsigned short) [50]
[57]     0.0    0.00    0.00      22         prime_generator::prime_pi(unsigned short) [57]
-----------------------------------------------
                0.00    0.00      22/22          ww::ww(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [59]
[58]     0.0    0.00    0.00      22         ww::simp_terms(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [58]
-----------------------------------------------
                0.00    0.00      22/22          www_nim::kappa(unsigned short) [50]
[59]     0.0    0.00    0.00      22         ww::ww(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [59]
                0.00    0.00      22/22          ww::simp_terms(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [58]
-----------------------------------------------
                0.00    0.00      22/22          www::operator=(www const&) [49]
[60]     0.0    0.00    0.00      22         ww::operator=(ww const&) [60]
                0.00    0.00      22/26          std::_List_iterator<std::pair<unsigned short, unsigned short> > std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > >::insert<std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, void>(std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >) [54]
-----------------------------------------------
                0.00    0.00      22/22          www_nim::kappa(unsigned short) [50]
[61]     0.0    0.00    0.00      22         www::www(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [61]
                0.00    0.00      22/56          www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
-----------------------------------------------
                0.00    0.00      22/22          www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
[62]     0.0    0.00    0.00      22         std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >) [62]
-----------------------------------------------
                0.00    0.00      22/22          www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [42]
[63]     0.0    0.00    0.00      22         operator<(ww const&, ww const&) [63]
-----------------------------------------------
                0.00    0.00       7/21          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      14/21          important_funcs::excess(unsigned short) <cycle 2> [3]
[64]     0.0    0.00    0.00      21         impartial_term_algebra::~impartial_term_algebra() [64]
-----------------------------------------------
                0.00    0.00      21/21          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
[65]     0.0    0.00    0.00      21         nt_funcs::max_pow_min_prime_div(unsigned short) [65]
                0.00    0.00      21/620         prime_generator::primes(unsigned short, unsigned short) [27]
-----------------------------------------------
                0.00    0.00       7/21          impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
                0.00    0.00      14/21          important_funcs::excess(unsigned short) <cycle 2> [3]
[66]     0.0    0.00    0.00      21         void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&) [66]
-----------------------------------------------
                0.00    0.00       7/21          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      14/21          important_funcs::excess(unsigned short) <cycle 2> [3]
[67]     0.0    0.00    0.00      21         std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >) [67]
-----------------------------------------------
                0.00    0.00      21/21          impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
[68]     0.0    0.00    0.00      21         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [68]
                0.00    0.00     266/599         nt_funcs::prime_pow(unsigned short) [28]
-----------------------------------------------
                0.00    0.00      21/21          impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
[69]     0.0    0.00    0.00      21         void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>) [69]
-----------------------------------------------
                0.00    0.00      18/18          ww::to_string[abi:cxx11]() const [72]
[70]     0.0    0.00    0.00      18         ww::string_of_term[abi:cxx11](unsigned short, unsigned short) [70]
                0.00    0.00       6/6           std::vector<unsigned short, std::allocator<unsigned short> >::~vector() [88]
-----------------------------------------------
                0.00    0.00       7/18          important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
                0.00    0.00      11/18          important_funcs::excess(unsigned short) <cycle 2> [3]
[71]     0.0    0.00    0.00      18         impartial_term_algebra::get_basis() const [71]
-----------------------------------------------
                0.00    0.00      18/18          www::string_of_term[abi:cxx11](ww, unsigned long) [45]
[72]     0.0    0.00    0.00      18         ww::to_string[abi:cxx11]() const [72]
                0.00    0.00      18/18          ww::string_of_term[abi:cxx11](unsigned short, unsigned short) [70]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::q_set(unsigned short) <cycle 2> [31]
[73]     0.0    0.00    0.00      14         cache_q_set(unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >) [73]
-----------------------------------------------
                0.00    0.00      14/14          main [2]
[74]     0.0    0.00    0.00      14         write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long) [74]
                0.00    0.00     535/535         std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&) [29]
                0.00    0.00      14/28          www::to_string[abi:cxx11]() const [53]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[75]     0.0    0.00    0.00      14         cache_excess(unsigned short, unsigned char) [75]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::q_set(unsigned short) <cycle 2> [31]
[76]     0.0    0.00    0.00      14         important_funcs::get_excess_cache() [76]
                0.00    0.00      14/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&) [33]
-----------------------------------------------
                0.00    0.00      14/14          main [2]
[77]     0.0    0.00    0.00      14         prime_generator::nth_prime(unsigned long) [77]
                0.00    0.00      14/1263        nt_funcs::is_3_pow(unsigned short) [26]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[78]     0.0    0.00    0.00      14         void boost::multiprecision::backends::subtract_unsigned<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long const&) [78]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[79]     0.0    0.00    0.00      14         void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [79]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[80]     0.0    0.00    0.00      14         void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [80]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[81]     0.0    0.00    0.00      14         nt_funcs::div_2_pow_min_1(unsigned short, unsigned int) [81]
-----------------------------------------------
                0.00    0.00      14/14          impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) <cycle 2> [14]
[82]     0.0    0.00    0.00      14         boost::wrapexcept<std::range_error>::clone() const [82]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[83]     0.0    0.00    0.00      14         void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [83]
                0.00    0.00     134/599         nt_funcs::prime_pow(unsigned short) [28]
-----------------------------------------------
                0.00    0.00      14/14          important_funcs::excess(unsigned short) <cycle 2> [3]
[84]     0.0    0.00    0.00      14         void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [84]
-----------------------------------------------
                0.00    0.00      14/14          main [2]
[85]     0.0    0.00    0.00      14         operator<<(std::ostream&, www const&) [85]
                0.00    0.00      14/28          www::to_string[abi:cxx11]() const [53]
-----------------------------------------------
                0.00    0.00      13/13          important_funcs::excess(unsigned short) <cycle 2> [3]
[86]     0.0    0.00    0.00      13         void boost::multiprecision::backends::left_shift_generic<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, unsigned __int128) [86]
-----------------------------------------------
                0.00    0.00       7/7           important_funcs::(anonymous namespace)::kappa_set(unsigned short) <cycle 2> [15]
[87]     0.0    0.00    0.00       7         void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>) [87]
-----------------------------------------------
                0.00    0.00       6/6           ww::string_of_term[abi:cxx11](unsigned short, unsigned short) [70]
[88]     0.0    0.00    0.00       6         std::vector<unsigned short, std::allocator<unsigned short> >::~vector() [88]
-----------------------------------------------
                0.00    0.00       1/3           q_set_records() [94]
                0.00    0.00       2/3           std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&) [91]
[89]     0.0    0.00    0.00       3         std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_unique_pos(unsigned short const&) [89]
-----------------------------------------------
                0.00    0.00       1/3           excess_records() [95]
                0.00    0.00       2/3           std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&) [92]
[90]     0.0    0.00    0.00       3         std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_unique_pos(unsigned short const&) [90]
-----------------------------------------------
                0.00    0.00       2/2           boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[91]     0.0    0.00    0.00       2         std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&) [91]
                0.00    0.00      56/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&) [33]
                0.00    0.00       2/3           std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_unique_pos(unsigned short const&) [89]
-----------------------------------------------
                0.00    0.00       2/2           boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[92]     0.0    0.00    0.00       2         std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&) [92]
                0.00    0.00      56/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&) [34]
                0.00    0.00       2/3           std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_unique_pos(unsigned short const&) [90]
-----------------------------------------------
                0.00    0.00       2/2           q_set_records() [94]
[93]     0.0    0.00    0.00       2         void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&&) [93]
-----------------------------------------------
                0.00    0.00       1/1           boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[94]     0.0    0.00    0.00       1         q_set_records() [94]
                0.00    0.00     186/324         frame_dummy [16]
                0.00    0.00     131/241         int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [30]
                0.00    0.00      55/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&) [33]
                0.00    0.00       2/2           void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&&) [93]
                0.00    0.00       1/3           std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_unique_pos(unsigned short const&) [89]
-----------------------------------------------
                0.00    0.00       1/1           boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[95]     0.0    0.00    0.00       1         excess_records() [95]
                0.00    0.00     110/324         frame_dummy [16]
                0.00    0.00     110/241         int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [30]
                0.00    0.00      55/125         std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&) [34]
                0.00    0.00       1/3           std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_unique_pos(unsigned short const&) [90]
-----------------------------------------------
                                  54             boost::wrapexcept<std::overflow_error>::rethrow() const [149]
[149]    0.0    0.00    0.00       0+54      boost::wrapexcept<std::overflow_error>::rethrow() const [149]
                0.00    0.00      57/57          std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base() [41]
                0.00    0.00      56/56          std::vector<unsigned short, std::allocator<unsigned short> >::vector(std::vector<unsigned short, std::allocator<unsigned short> > const&) [43]
                0.00    0.00       2/2           std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&) [91]
                0.00    0.00       2/2           std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&) [92]
                0.00    0.00       1/1           q_set_records() [94]
                0.00    0.00       1/1           excess_records() [95]
                                  54             boost::wrapexcept<std::overflow_error>::rethrow() const [149]
-----------------------------------------------

 This table describes the call tree of the program, and was sorted by
 the total amount of time spent in each function and its children.

 Each entry in this table consists of several lines.  The line with the
 index number at the left hand margin lists the current function.
 The lines above it list the functions that called this function,
 and the lines below it list the functions this one called.
 This line lists:
     index	A unique number given to each element of the table.
		Index numbers are sorted numerically.
		The index number is printed next to every function name so
		it is easier to look up where the function is in the table.

     % time	This is the percentage of the `total' time that was spent
		in this function and its children.  Note that due to
		different viewpoints, functions excluded by options, etc,
		these numbers will NOT add up to 100%.

     self	This is the total amount of time spent in this function.

     children	This is the total amount of time propagated into this
		function by its children.

     called	This is the number of times the function was called.
		If the function called itself recursively, the number
		only includes non-recursive calls, and is followed by
		a `+' and the number of recursive calls.

     name	The name of the current function.  The index number is
		printed after it.  If the function is a member of a
		cycle, the cycle number is printed between the
		function's name and the index number.


 For the function's parents, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the function into this parent.

     children	This is the amount of time that was propagated from
		the function's children into this parent.

     called	This is the number of times this parent called the
		function `/' the total number of times the function
		was called.  Recursive calls to the function are not
		included in the number after the `/'.

     name	This is the name of the parent.  The parent's index
		number is printed after it.  If the parent is a
		member of a cycle, the cycle number is printed between
		the name and the index number.

 If the parents of the function cannot be determined, the word
 `<spontaneous>' is printed in the `name' field, and all the other
 fields are blank.

 For the function's children, the fields have the following meanings:

     self	This is the amount of time that was propagated directly
		from the child into the function.

     children	This is the amount of time that was propagated from the
		child's children to the function.

     called	This is the number of times the function called
		this child `/' the total number of times the child
		was called.  Recursive calls by the child are not
		listed in the number after the `/'.

     name	This is the name of the child.  The child's index
		number is printed after it.  If the child is a
		member of a cycle, the cycle number is printed
		between the name and the index number.

 If there are any cycles (circles) in the call graph, there is an
 entry for the cycle-as-a-whole.  This entry shows who called the
 cycle (as parents) and the members of the cycle (as children.)
 The `+' recursive calls entry shows the number of function calls that
 were internal to the cycle, and the calls entry for each member shows,
 for that member, how many times it was called from other members of
 the cycle.

Copyright (C) 2012-2022 Free Software Foundation, Inc.

Copying and distribution of this file, with or without modification,
are permitted in any medium without royalty provided the copyright
notice and this notice are preserved.

Index by function name

  [73] cache_q_set(unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >) [45] www::string_of_term[abi:cxx11](ww, unsigned long) [43] std::vector<unsigned short, std::allocator<unsigned short> >::vector(std::vector<unsigned short, std::allocator<unsigned short> > const&)
  [74] write_alpha(std::basic_ofstream<char, std::char_traits<char> >&, unsigned short, std::vector<unsigned short, std::allocator<unsigned short> > const&, unsigned char, www const&, long) [47] www::www(unsigned long) [88] std::vector<unsigned short, std::allocator<unsigned short> >::~vector()
  [75] cache_excess(unsigned short, unsigned char) [61] www::www(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [62] std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >, std::_List_iterator<std::pair<ww, unsigned long> >)
  [94] q_set_records()        [49] www::operator=(www const&) [39] std::_List_iterator<std::pair<ww, unsigned long> > std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > >::insert<std::_List_const_iterator<std::pair<ww, unsigned long> >, void>(std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >, std::_List_const_iterator<std::pair<ww, unsigned long> >)
  [95] excess_records()       [78] void boost::multiprecision::backends::subtract_unsigned<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long const&) [54] std::_List_iterator<std::pair<unsigned short, unsigned short> > std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > >::insert<std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, void>(std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >, std::_List_const_iterator<std::pair<unsigned short, unsigned short> >)
  [37] important_funcs::(anonymous namespace)::finite_summand(unsigned short, unsigned short) [86] void boost::multiprecision::backends::left_shift_generic<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&, unsigned __int128) [24] std::pair<std::_Rb_tree_iterator<unsigned int>, bool> std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_insert_unique<unsigned int const&>(unsigned int const&)
  [40] important_funcs::(anonymous namespace)::finite_components(unsigned short, unsigned short) [79] void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, unsigned long long, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [23] std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_unique_pos(unsigned int const&)
  [56] important_funcs::(anonymous namespace)::primitive_components(unsigned short) [80] void boost::multiprecision::backends::divide_unsigned_helper<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > >(boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >*, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> > const&, boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >&) [25] std::_Rb_tree<unsigned int, unsigned int, std::_Identity<unsigned int>, std::less<unsigned int>, std::allocator<unsigned int> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned int>, unsigned int const&)
  [15] important_funcs::(anonymous namespace)::kappa_set(unsigned short) [7] www_nim::alpha(unsigned short) [89] std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_unique_pos(unsigned short const&)
  [76] important_funcs::get_excess_cache() [50] www_nim::kappa(unsigned short) [33] std::_Rb_tree<unsigned short, std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > >, std::_Select1st<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, unsigned short const&)
  [31] important_funcs::q_set(unsigned short) [81] nt_funcs::div_2_pow_min_1(unsigned short, unsigned int) [90] std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_unique_pos(unsigned short const&)
   [3] important_funcs::excess(unsigned short) [52] nt_funcs::f(unsigned short) [34] std::_Rb_tree<unsigned short, std::pair<unsigned short const, unsigned char>, std::_Select1st<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<std::pair<unsigned short const, unsigned char> >, unsigned short const&)
  [27] prime_generator::primes(unsigned short, unsigned short) [65] nt_funcs::max_pow_min_prime_div(unsigned short) [32] std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_unique_pos(unsigned short const&)
  [57] prime_generator::prime_pi(unsigned short) [26] nt_funcs::is_3_pow(unsigned short) [55] std::_Rb_tree<unsigned short, unsigned short, std::_Identity<unsigned short>, std::less<unsigned short>, std::allocator<unsigned short> >::_M_get_insert_hint_unique_pos(std::_Rb_tree_const_iterator<unsigned short>, unsigned short const&)
  [77] prime_generator::nth_prime(unsigned long) [28] nt_funcs::prime_pow(unsigned short) [22] void std::__adjust_heap<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, long, unsigned short, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
  [12] impartial_term_algebra::term_times_term(unsigned int, unsigned int) [30] int __gnu_cxx::__stoa<long, int, char, int>(long (*)(char const*, char**, int), char const*, char const*, unsigned long*, int) [48] void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
   [9] impartial_term_algebra::q_power_times_term(unsigned long, unsigned short, unsigned int) [46] impartial_term_algebra::get_term_count() const [83] void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
   [6] impartial_term_algebra::accumulate_term_product(unsigned int, unsigned int) [44] impartial_term_algebra::get_q_components() const [68] void std::__insertion_sort<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
  [13] impartial_term_algebra::q_power_times_term_calc(unsigned long, unsigned short, unsigned int) [71] impartial_term_algebra::get_basis() const [87] void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::(anonymous namespace)::kappa_set(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
   [4] impartial_term_algebra::power(term_array const&, boost::multiprecision::number<boost::multiprecision::backends::cpp_int_backend<0u, 0u, (boost::multiprecision::cpp_integer_type)1, (boost::multiprecision::cpp_int_check_type)0, std::allocator<unsigned long long> >, (boost::multiprecision::expression_template_option)1> const&) [72] ww::to_string[abi:cxx11]() const [84] void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<important_funcs::excess(unsigned short)::{lambda(unsigned short, unsigned short)#1}>)
  [11] impartial_term_algebra::square(term_array const&) [53] www::to_string[abi:cxx11]() const [69] void std::__introsort_loop<__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}> >(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, long, __gnu_cxx::__ops::_Iter_comp_iter<impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&)::{lambda(unsigned short, unsigned short)#1}>)
   [5] impartial_term_algebra::multiply(term_array const&, term_array const&) [51] www::operator+(www const&) const [29] std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > std::operator+<char, std::char_traits<char>, std::allocator<char> >(char const*, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const&)
  [14] impartial_term_algebra::impartial_term_algebra(std::vector<unsigned short, std::allocator<unsigned short> >&) [82] boost::wrapexcept<std::range_error>::clone() const [36] operator==(ww const&, ww const&)
  [64] impartial_term_algebra::~impartial_term_algebra() [41] std::_Vector_base<unsigned short, std::allocator<unsigned short> >::~_Vector_base() [85] operator<<(std::ostream&, www const&)
  [58] ww::simp_terms(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [91] std::map<unsigned short, std::vector<unsigned short, std::allocator<unsigned short> >, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > >::map(std::initializer_list<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, std::vector<unsigned short, std::allocator<unsigned short> > > > const&) [63] operator<(ww const&, ww const&)
  [70] ww::string_of_term[abi:cxx11](unsigned short, unsigned short) [92] std::map<unsigned short, unsigned char, std::less<unsigned short>, std::allocator<std::pair<unsigned short const, unsigned char> > >::map(std::initializer_list<std::pair<unsigned short const, unsigned char> >, std::less<unsigned short> const&, std::allocator<std::pair<unsigned short const, unsigned char> > const&) [10] _init
  [59] ww::ww(std::__cxx11::list<std::pair<unsigned short, unsigned short>, std::allocator<std::pair<unsigned short, unsigned short> > > const&) [66] void std::vector<unsigned int, std::allocator<unsigned int> >::_M_realloc_insert<unsigned int>(__gnu_cxx::__normal_iterator<unsigned int*, std::vector<unsigned int, std::allocator<unsigned int> > >, unsigned int&&) [16] frame_dummy
  [35] ww::ww(unsigned short) [38] void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short const&>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short const&) [8] <cycle 1>
  [60] ww::operator=(ww const&) [93] void std::vector<unsigned short, std::allocator<unsigned short> >::_M_realloc_insert<unsigned short>(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, unsigned short&&) [1] <cycle 2>
  [42] www::simp_terms(std::__cxx11::list<std::pair<ww, unsigned long>, std::allocator<std::pair<ww, unsigned long> > > const&) [67] std::vector<unsigned short, std::allocator<unsigned short> >::_M_erase(__gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >, __gnu_cxx::__normal_iterator<unsigned short*, std::vector<unsigned short, std::allocator<unsigned short> > >)
